# yaml-language-server: $schema=https://localhost:7701/api/public/v1/schema/appInfoYaml

name: "Server Application"

supportedOperatingSystems:
  - LINUX
  - WINDOWS
  #- MACOS

processControl:
  gracePeriod: 3000
  supportedStartTypes:
    - MANUAL
    - MANUAL_CONFIRM
    - INSTANCE
  supportsKeepAlive: true
  noOfRetries: 2

startCommand:
  launcherPath: "{{WINDOWS:launch2.bat}}{{LINUX:launch2.sh}}{{MACOS:launch2.sh}}"
  parameters:
    - uid: "param.text"
      name: "Text"
      longDescription: "A text parameter"
      groupName: "Test Parameters"
      parameter: "--text"
      mandatory: false
    - uid: "param.encoded"
      name: "Encoded Text"
      longDescription: "An encoded text parameter - requires plugin which provides BASE64_EDITOR"
      groupName: "Test Parameters"
      parameter: "--text"
      mandatory: false
      customEditor: "BASE64_EDITOR"
    - uid: "param.global"
      name: "Global"
      longDescription: "A global parameter"
      defaultValue: "{{X:param.global}}"
      groupName: "Test Parameters"
      parameter: "--text"
      mandatory: false
      global: true
    - uid: "param.pass"
      name: "Password"
      longDescription: "A password parameter"
      groupName: "Test Parameters"
      parameter: "--text"
      mandatory: false
      type: PASSWORD
    - uid: "param.boolean"
      name: "Boolean"
      longDescription: "A boolean parameter"
      groupName: "Test Parameters"
      parameter: "--help"
      hasValue: false
      type: BOOLEAN
    - uid: "param.fixed"
      name: "Fixed"
      longDescription: "A fixed parameter"
      groupName: "Test Parameters"
      parameter: "--text"
      defaultValue: "SECOND_FIXED_VALUE"
      mandatory: true
      fixed: true
      type: STRING
    - template: shared_parameters
    - uid: "param.subprocesses"
      name: "Subprocess Count"
      longDescription: "How many subprocesses should be started. Each sub-process stays alive for 60 seconds."
      groupName: "Test Parameters"
      parameter: "--subprocesses"
      type: NUMERIC
    - uid: "param.out"
      name: "Output"
      longDescription: "A data file parameter"
      groupName: "Test Parameters"
      parameter: "--out"
      defaultValue: "{{P:DATA}}/out.txt"
    - uid: "param.cfg"
      name: "Config File"
      longDescription: "A config file parameter"
      groupName: "Test Parameters"
      parameter: "--cfg"
      defaultValue: "{{P:CONFIG}}/config.txt"
    - uid: "param.sleep"
      name: "Sleep Timeout"
      longDescription: "A numeric parameter - controls how long the application stays alive"
      groupName: "Sleep Configuration"
      parameter: "--sleep"
      defaultValue: "10"
      type: NUMERIC
    - uid: "param.ping"
      name: "Ping Endless"
      longDescription: "Start a neverending ping on localhost"
      groupName: "Test Parameters"
      parameter: "--ping"
      hasValue: false
      type: BOOLEAN
    - uid: "param.server.port"
      name: "Test Server Port"
      longDescription: "A server port - which will never be opened by the test product"
      groupName: "Test Parameters"
      parameter: "--server"
      type: SERVER_PORT
    - uid: "param.client.port"
      name: "Test Client Port"
      longDescription: "A client port"
      groupName: "Test Parameters"
      parameter: "--client"
      type: CLIENT_PORT
    - uid: "param.testboolean"
      name: "Boolean"
      longDescription: "A boolean parameter"
      groupName: "Test Parameters"
      parameter: "--help"
      hasValue: false
      mandatory: true
      defaultValue: false
      type: BOOLEAN
    - uid: "param.boolean.with.value"
      name: "Boolean with value"
      longDescription: "A boolean parameter with value"
      groupName: "Tested by Cypress"
      parameter: "--boolean-with-value"
      hasValue: true
      type: BOOLEAN
      mandatory: true
      defaultValue: false
    - uid: "param.boolean.without.value"
      name: "Boolean without value"
      longDescription: "A boolean parameter without value"
      groupName: "Tested by Cypress"
      parameter: "--boolean-without-value"
      hasValue: false
      type: BOOLEAN
      mandatory: true
      defaultValue: false
    - uid: "param.cond.equal"
      name: "Mandatory Conditional"
      groupName: "Test Parameters"
      parameter: "--text"
      mandatory: true
      condition:
        parameter: "param.text"
        must: EQUAL
        value: "test"
    - uid: "param.cond.nonempty"
      name: "Non-Empty Conditional"
      groupName: "Test Parameters"
      parameter: "--text"
      mandatory: true
      condition:
        parameter: "param.testboolean"
        must: BE_NON_EMPTY
    - uid: "param.cond.empty"
      name: "Empty Conditional"
      groupName: "Test Parameters"
      parameter: "--text"
      condition:
        parameter: "param.testboolean"
        must: BE_EMPTY
    - uid: "param.cond.starts"
      name: "StartsWith Conditional"
      groupName: "Test Parameters"
      parameter: "--text"
      mandatory: true
      condition:
        parameter: "param.text"
        must: START_WITH
        value: "test"
    - uid: "param.cond.ends"
      name: "EndsWith Conditional"
      groupName: "Test Parameters"
      parameter: "--text"
      mandatory: true
      condition:
        parameter: "param.text"
        must: END_WITH
        value: "test"
    - uid: "param.cond.contains"
      name: "Contains Conditional"
      groupName: "Test Parameters"
      parameter: "--text"
      mandatory: true
      condition:
        parameter: "param.text"
        must: CONTAIN
        value: "test"
    - uid: "param.cond.expression"
      name: "Instance Variable Test is not empty"
      groupName: "Test Parameters"
      parameter: "--text"
      defaultValue: "{{X:Test}}"
      mandatory: true
      condition:
        expression: "{{X:Test}}"
        must: BE_NON_EMPTY
    - uid: "param.global.cond"
      name: "Condition Depending on Global"
      groupName: "Test Parameters"
      parameter: "--text"
      defaultValue: "{{V:param.global}}"
      mandatory: true
      condition:
        expression: "{{V:param.global}}"
        must: CONTAIN
        value: "test"
    - uid: "param.env.test"
      name: "Test Environment"
      description: "Sets the TEST_VAR environment variable"
      groupName: "Test Parameters"
      parameter: "TEST_VAR"
      defaultValue: "X"
      type: ENVIRONMENT

    - id: jvm-debug-port-non-suspend
      name: "Java Port for Non-Suspend Debugging"
      longDescription: >
        The JVM starts immediately and is not waiting for a debugger.
      parameter: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:"
      valueSeparator: ""
      type: SERVER_PORT
      mandatory: false
      groupName: "XOR Test"
      condition:
        parameter: "jvm-debug-port-suspend"
        must: BE_EMPTY

    - id: jvm-debug-port-suspend
      name: "Java Port for Suspend Debugging"
      longDescription: >
        The JVM starts in suspended mode and stays suspended until a debugger attaches to it.
        This is helpful if you want to start debugging as soon as the JVM starts
      parameter: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:"
      valueSeparator: ""
      type: SERVER_PORT
      mandatory: false
      groupName: "XOR Test"
      condition:
        parameter: "jvm-debug-port-non-suspend"
        must: BE_EMPTY

    - id: "testparam.1"
      name: "Workspace Path"
      parameter: "-Dosgi.instance.area"
      defaultValue: "P:DATA/workspace"
      mandatory: true
      type: STRING
      groupName: "Test Group 1"
      longDescription: "Long Desc 1"
      condition:
        expression: "{{V:testparam.2}}"
        must: BE_EMPTY
    - id: "testparam.2"
      name: "Workspace Path"
      parameter: "-Dosgi.instance.area"
      defaultValue: "/some/path"
      type: STRING
      groupName: "Test Group 2"
      longDescription: "Long Desc 2"

endpoints:
  http:
    - id: "myVersion - enabled"
      path: "public/version"
      port: 1111
      enabled: true
    - id: "myVersion - disabled"
      path: "public/version"
      port: 2222
      enabled: false
    - id: "myVersionUI - enabled"
      path: "public/ui"
      port: 3333
      enabled: true
      type: UI
    - id: "myVersionUI - disabled"
      path: "public/ui"
      port: 4444
      enabled: false
      type: UI

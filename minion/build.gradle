plugins {
  id 'application'
}

ext {
    scriptDefVmArgs = [ '-Xms64m', '-Xmx1g', '-XX:-OmitStackTraceInFastThrow' ]
}

mainClassName = 'io.bdeploy.minion.cli.MinionServerCli'

dependencies {
    implementation(
        project(":common"),
        project(":logging"),
        project(":jersey"),
        project(":bhive"),
        project(":dcu"),
        project(":pcu"),
        project(":interfaces"),
        project(":ui"),
        project(":schema"),
        project(":messaging"),

        'org.bouncycastle:bcpkix-jdk18on:1.80',
        'org.bouncycastle:bcprov-jdk18on:1.80',
        'org.quartz-scheduler:quartz:2.5.0',
        'net.jsign:jsign-core:6.0',
        'com.nimbusds:oauth2-oidc-sdk:11.21.3'
    )

    commonTestDeps(project(":launcher"))
    commonTestDeps(testFixtures(project(":common")))
    commonTestDeps(testFixtures(project(":jersey")))
    commonTestDeps(testFixtures(project(":bhive")))
    commonTestDeps(testFixtures(project(":pcu")))
}

rootProject.addMultiPlatformDistBuild(project)

startScripts {
    applicationName = '_bdeploy'
}

evaluationDependsOn(':launcher')
void addLauncherDist(Distribution dist) {
    if(!project(':launcher').linux64DistZip.enabled) {
        println("WARNING: Linux launcher dist not enabled, not included in BDeploy release ZIPs");
    } else {
        dist.contents {
            from(project(':launcher').linux64DistZip) {
                into 'launcher'
            }
        }
    }
    if(!project(':launcher').win64DistZip.enabled) {
        println("WARNING: Windows launcher dist not enabled, not included in BDeploy release ZIPs");
    } else {
        dist.contents {
            from(project(':launcher').win64DistZip) {
                into 'launcher'
            }
        }
    }
    if(!project(':launcher').mac64DistZip.enabled) {
        println("WARNING: MacOS launcher dist not enabled, not included in BDeploy release ZIPs");
    } else {
        dist.contents {
            from(project(':launcher').mac64DistZip) {
                into 'launcher'
            }
        }
    }
}

distributions {
    win64 {
        distributionBaseName = 'bdeploy-win64'
        addLauncherDist(it)
        contents {
            exclude '_bdeploy'
        }
    }
    linux64 {
        distributionBaseName = 'bdeploy-linux64'
        addLauncherDist(it)
        contents {
            exclude '_bdeploy.bat'
            rename('_bdeploy', 'bdeploy')
        }
    }
    mac64 {
        distributionBaseName = 'bdeploy-mac64'
        addLauncherDist(it)
    }
}



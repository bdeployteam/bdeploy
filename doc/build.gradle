import com.github.gradle.node.npm.task.NpxTask

plugins {
    id "com.github.node-gradle.node" version "7.1.0"
}

node {
    download = true
    version = "22.16.0"
    workDir = layout.buildDirectory.dir('nodejs')
    npmInstallCommand = 'ci'
}

private resolveVersion(NpxTask task, Directory dir) {
    configure(task) {
        def retypeFile = dir.file("retype.yml").asFile
        def inFile = dir.file("retype.yml.in").asFile
        def releaseTagPattern = ~/^\d+\.\d+\.\d+$/
        def releaseVersion = project.version.toString()
        def releaseLink = (releaseVersion ==~ releaseTagPattern) ? "https://github.com/bdeployteam/bdeploy/releases/tag/v${releaseVersion}" : "https://github.com/bdeployteam/bdeploy/releases"

        doFirst {
            retypeFile.text = inFile.text.replace("{{ releaseVersion }}", releaseVersion).replace("{{ releaseLink }}", releaseLink)
        }
    }
}

private buildRetype(NpxTask task, Directory dir) {
    configure(task) {
        enabled !rootProject.isAarch64()
        dependsOn npmInstall
        dependsOn nodeSetup
        resolveVersion(task, dir)
        group = BasePlugin.BUILD_GROUP

        command = 'retypeapp'
        args = ['build']
    }
}

tasks.register('retypeDevDoc', NpxTask) { t ->
    def dir = layout.projectDirectory.dir('retypedev')
    workingDir = dir
    inputs.dir(dir)
    outputs.dir(layout.buildDirectory.dir("docs/dev"))
    buildRetype(t, dir)
}

tasks.register('retypeUserDoc', NpxTask) { t ->
    def dir = layout.projectDirectory.dir('retypeuser')
    workingDir = dir
    inputs.dir(dir)
    outputs.dir(layout.buildDirectory.dir("docs/user"))
    buildRetype(t, dir)
}

tasks.register('doc') {
    dependsOn retypeDevDoc
    dependsOn retypeUserDoc
}

tasks.register('clean') {
    delete layout.buildDirectory
}
